# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    outputs:
      IMAGE_TAG: ${{ steps.gen-env.outputs.image_tag }}

    steps:
      - uses: actions/checkout@v3

      - name: Generate env
        id: gen-env
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Generate envs for jobs
          branch="$(echo ${{ github.ref }} | cut  -d '/' -f 3- | sed -e 's|/|-|g')"
          repository="$(echo ${{ github.repository }} | cut  -d '/' -f 2)"
          image_tag="$(git describe --tag --always)"
          echo "::set-output name=repository::$repository"
          echo "::set-output name=image_tag::$image_tag"
          echo "::set-output name=image_name::$ECR_REGISTRY/$repository"
          echo "::set-output name=image_full::$ECR_REGISTRY/$repository:$image_tag"

  deploy:
    name: Create MR for deployment
    runs-on: ubuntu-latest
    needs: [build]
    env:
      GIT_EMAIL: action@github.com
      GIT_NAME: ${{ github.actor }}
      GIT_TARGET_REPO: "${{ github.repository_owner }}/gitops-config"
      GIT_BASE_BRANCH: main
      SERVICE_NAME: ${{ github.event.repository.name }}
      IMAGE_TAG: ${{ needs.build.outputs.IMAGE_TAG }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ env.GIT_TARGET_REPO }}
          token: ${{ secrets.GITOPS_REPO_TOKEN }}

      - name: Config git
        run: |
          git config --global user.email "$GIT_EMAIL"
          git config --global user.name "$GIT_NAME"

      - name: Checkout new branch
        env:
          GIT_BRANCH: "deploy/gitops-app-${{ IMAGE_TAG }}"
        run: |
          git checkout -b $GIT_BRANCH

      - run: |
          cd gitops-app
          yq e ".replicaCount=2" -i values.yaml
          yq e ".image.tag=\"$IMAGE_TAG\"" -i values.yaml
          git add .
          git commit -m "Update ${{ SERVICE_NAME }} version $IMAGE_TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITOPS_REPO_TOKEN }}

      - name: Push changes & create merge request
        shell: bash
        env:
          GIT_BRANCH: "deploy/gitops-app-${{ IMAGE_TAG }}"
          GITHUB_TOKEN: ${{ env.GITOPS_REPO_TOKEN }}
          GIT_PULL_REQUEST: "Deploy ${{ SERVICE_NAME }} ${{ IMAGE_TAG }}"
        run: |
          if [[ `git --no-pager log "$GIT_BASE_BRANCH..$GIT_BRANCH" --decorate=short --pretty=oneline -n1` ]]; then
            git push origin $GIT_BRANCH
            hub pull-request --base $GIT_BASE_BRANCH -m "$GIT_PULL_REQUEST"
          else
            echo 'No changes'
          fi
