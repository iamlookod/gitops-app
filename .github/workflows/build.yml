# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

  deploy:
    name: Create MR for deployment
    runs-on: ubuntu-latest
    needs: [build]
    env:
      GIT_EMAIL: action@github.com
      GIT_NAME: GitHub Action
      GIT_TARGET_REPO: "${{ github.repository_owner }}/gitops-config"
      GIT_BASE_BRANCH: main

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ env.GIT_TARGET_REPO }}
          token: ${{ secrets.GITOPS_REPO_TOKEN }}

      - name: Config git
        run: |
          git config --global user.email "$GIT_EMAIL"
          git config --global user.name "$GIT_NAME"

      - name: Checkout new branch
        id: get_branch
        env:
          GIT_BRANCH: "deploy/gitops-app-${{ github.sha }}"
        run: |
          git checkout -b $GIT_BRANCH

      - run: |
          cd gitops-app
          yq e ".replicaCount=2" -i values.yaml
          yq e ".image.tag=\"$TAG\"" -i values.yaml
          git add .
          git commit -m "update ${{ github.repository }} version $TAG"
        env:
          TAG: ${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.GITOPS_REPO_TOKEN }}

      - name: Push changes & create merge request
        shell: bash
        env:
          GIT_BRANCH: "deploy/gitops-app-${{ github.sha }}"
          GITHUB_TOKEN: ${{ secrets.GITOPS_REPO_TOKEN }}
          GIT_PULL_REQUEST: "Deploy api-gateway ${{ github.sha }}"
        run: |
          if [[ `git --no-pager log "$GIT_BASE_BRANCH..$GIT_BRANCH" --decorate=short --pretty=oneline -n1` ]]; then
            git push origin $GIT_BRANCH
            hub pull-request --base $GIT_BASE_BRANCH -m "$GIT_PULL_REQUEST"
          else
            echo 'No changes'
          fi
